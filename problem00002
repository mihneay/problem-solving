/// Date : Sunday, May 24, 2020
/// Task : csacademy.com/contest/archive/task/voting/statement/
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

int eval(vector<int> a) {
  int n = (int) a.size(), c = 0;
  for (int i = 1; i < n; i++) {
    if (a[i] * (ll) i > c * (ll) n) {
      c++;
    }
  }
  return c;
}

vector<int> gen(int n, ll x) {
  vector<int> sol;
  int p = n - 1, suf = 0;
  while (p <= x) {
    x -= p;
    p--;
    suf++;
    if (x > 0 && p < 0) {
      suf = n;
      break;
    }
  }
  for (int i = suf - 1; i >= 0; i--) {
    sol.push_back(i);
  }
  if ((int) sol.size() == n) {
    return sol;
  }
  int mv = suf;
  int rem = n - suf - 1;
  sol.clear();
  for (int j = 1; j <= rem; j++) {
    if (j == x + 1) {
      sol.push_back(suf);
    }
    sol.push_back(j + suf);
  }
  for (int i = suf - 1; i >= 0; i--) {
    sol.push_back(i);
  }
  return sol;
}

void print(vector<int> a) {
  for (auto &x : a) {
    cout << x << " ";
  }
  cout << "\n";
}

vector<int> ap(vector<int> a, vector<int> b) {
  int n = (int) a.size();
  vector<int> sol;
  for (int j = 0; j < n; j++) {
    sol.push_back(a[b[j]]);
  }
  return sol;
}

int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int n, x;
  cin >> n >> x;
  vector<int> a(n);
  for (int i = 0; i < n; i++) {
    cin >> a[i];
  }
  sort(a.rbegin(), a.rend());
  if (x <= eval(a)) {
    print(a);
    return 0;
  }
  ll lo = 0, hi = n * (ll) (n - 1) / 2, sol = 0;
  while (lo <= hi) {
    ll mid = (lo + hi) / 2;
    if (eval(ap(a, gen(n, mid))) <= x) {
      sol = mid;
      lo = mid + 1;
    } else {
      hi = mid - 1;
    }
  }
  print(ap(a, gen(n, sol)));
  return 0;
}
